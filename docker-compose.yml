version: '3.8'

services:
  # Nginx Web Server
  nginx:
    build: ./docker/nginx
    container_name: m2-nginx
    volumes:
      - ./volumes/magento:/var/www/html:ro
      - ./volumes/magento/media:/var/www/html/pub/media:ro
    depends_on:
      - php-fpm
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: ${NGINX_MEMORY_LIMIT:-256M}

  # PHP-FPM 8.3
  php-fpm:
    image: php:8.3-fpm
    container_name: m2-php-fpm
    volumes:
      - ./volumes/magento:/var/www/html
      - ./volumes/magento/media:/var/www/html/pub/media
      - ./volumes/magento/var:/var/www/html/var
    environment:
      - PHP_MEMORY_LIMIT=${PHP_MEMORY_LIMIT:-2G}
      - PHP_MAX_EXECUTION_TIME=${PHP_MAX_EXECUTION_TIME:-1800}
      - PHP_UPLOAD_MAX_FILESIZE=${PHP_UPLOAD_MAX_FILESIZE:-64M}
      - PHP_POST_MAX_SIZE=${PHP_POST_MAX_SIZE:-64M}
      - XDEBUG_ENABLED=${XDEBUG_ENABLED:-false}
      - XDEBUG_HOST=${XDEBUG_HOST:-host.docker.internal}
      - XDEBUG_PORT=${XDEBUG_PORT:-9003}
    depends_on:
      - mariadb
      - redis-cache
      - redis-sessions
      - rabbitmq
      - opensearch
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: ${PHP_MEMORY_LIMIT_CONTAINER:-1G}

  # PHP Cron Container
  php-cron:
    image: php:8.3-fpm
    container_name: m2-php-cron
    volumes:
      - ./volumes/magento:/var/www/html
      - ./volumes/magento/media:/var/www/html/pub/media
      - ./volumes/magento/var:/var/www/html/var
    environment:
      - PHP_MEMORY_LIMIT=${PHP_MEMORY_LIMIT:-2G}
      - PHP_MAX_EXECUTION_TIME=${PHP_MAX_EXECUTION_TIME:-1800}
    depends_on:
      - mariadb
      - redis-cache
      - redis-sessions
      - rabbitmq
      - opensearch
    restart: unless-stopped
    command: >
      sh -c "
        while true; do
          cd /var/www/html && php bin/magento cron:run
          sleep 60
        done
      "
    deploy:
      resources:
        limits:
          memory: ${PHP_MEMORY_LIMIT_CONTAINER:-1G}

  # Queue Consumer Container
  queue-consumer:
    image: php:8.3-fpm
    container_name: m2-queue-consumer
    volumes:
      - ./volumes/magento:/var/www/html
      - ./volumes/magento/media:/var/www/html/pub/media
      - ./volumes/magento/var:/var/www/html/var
    environment:
      - PHP_MEMORY_LIMIT=${PHP_MEMORY_LIMIT:-2G}
      - PHP_MAX_EXECUTION_TIME=${PHP_MAX_EXECUTION_TIME:-1800}
    depends_on:
      - mariadb
      - redis-cache
      - redis-sessions
      - rabbitmq
      - opensearch
    restart: unless-stopped
    command: >
      sh -c "
        cd /var/www/html && 
        php bin/magento queue:consumers:start async.operations.all --max-messages=${QUEUE_CONSUMER_MAX_MESSAGES:-1000}
      "
    deploy:
      resources:
        limits:
          memory: ${PHP_MEMORY_LIMIT_CONTAINER:-1G}

  # Varnish Cache
  varnish:
    image: varnish:7.2-alpine
    container_name: m2-varnish
    volumes:
      - ./docker/varnish/default.vcl:/etc/varnish/custom.vcl:ro
    command: ["varnishd", "-F", "-f", "/etc/varnish/custom.vcl", "-s", "malloc,${VARNISH_SIZE:-2G}", "-a", "0.0.0.0:80"]
    environment:
      - VARNISH_SIZE=${VARNISH_SIZE:-2G}
    depends_on:
      - nginx
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: ${VARNISH_MEMORY_LIMIT:-512M}

  # MariaDB Database
  mariadb:
    image: mariadb:10.5
    container_name: m2-mariadb
    environment:
      - MYSQL_ROOT_PASSWORD=${SERVICE_PASSWORD_MYSQL}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${SERVICE_PASSWORD_MYSQL}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mariadb/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: ${MARIADB_MEMORY_LIMIT:-1G}

  # OpenSearch
  opensearch:
    image: opensearchproject/opensearch:2.9.0
    container_name: m2-opensearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx${OPENSEARCH_MEMORY_LIMIT:-2G}"
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${SERVICE_PASSWORD_OPENSEARCH}
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: ${OPENSEARCH_MEMORY_LIMIT:-2G}

  # Redis Cache (for Magento cache)
  redis-cache:
    image: redis:7.0-alpine
    container_name: m2-redis-cache
    command: redis-server --appendonly yes --requirepass ${SERVICE_PASSWORD_REDIS_CACHE}
    volumes:
      - redis_cache_data:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: ${REDIS_CACHE_MEMORY_LIMIT:-512M}

  # Redis Sessions (for Magento sessions)
  redis-sessions:
    image: redis:7.0-alpine
    container_name: m2-redis-sessions
    command: redis-server --appendonly yes --requirepass ${SERVICE_PASSWORD_REDIS_SESSIONS}
    volumes:
      - redis_sessions_data:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: ${REDIS_SESSIONS_MEMORY_LIMIT:-256M}

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: m2-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${SERVICE_PASSWORD_RABBITMQ}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: ${RABBITMQ_MEMORY_LIMIT:-512M}

  # Mailhog for Email Testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: m2-mailhog
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local
  opensearch_data:
    driver: local
  redis_cache_data:
    driver: local
  redis_sessions_data:
    driver: local
  rabbitmq_data:
    driver: local
  magento_media:
    driver: local
  magento_var:
    driver: local
